# TC - O(m*n)
# SC - O(min(m, n))
# Ran on LC - Yes

# Bottom up for recursive solution - add from top and left

class Solution:
    def uniquePaths(self, m: int, n: int) -> int:
        if m < n:
            self.uniquePaths(n, m)
        dp = [1 for _ in range(n)]
        for r in range(1, m):
            for i in range(1, n):
                dp[i] += dp[i-1]
        return dp[-1]